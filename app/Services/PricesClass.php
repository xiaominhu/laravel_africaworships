<?php
namespace App\Services;

require_once __DIR__.'/dropbox-sdk/lib/Dropbox/autoload.php';

use \Dropbox as dbx;

class PricesClass {
	public function getOauthURI(){
		$appInfo = dbx\AppInfo::loadFromJsonFile(__DIR__."/secret.json");
		$webAuth = new dbx\WebAuthNoRedirect($appInfo, "PHP-Example/1.0");
		$authorizeUrl = $webAuth->start();
		return $authorizeUrl;
	}
	
	public function getAccessToken($authCode){
		$appInfo = dbx\AppInfo::loadFromJsonFile(__DIR__."/secret.json");
		$webAuth = new dbx\WebAuthNoRedirect($appInfo, "PHP-Example/1.0");
		$authorizeUrl = $webAuth->start();		
		list($accessToken, $dropboxUserId) = $webAuth->finish($authCode);
		return $accessToken;
		//token = 'VTVlOq_7TGAAAAAAAAAAIqGoytTgdYs_FX7Qi075iDwphUrL2LzZmBPo0qsfjJC6 ';
		//token = 'VTVlOq_7TGAAAAAAAAAAJEZiuOHPo3AqoAOQv9N78STAvNLS24SA3ihLE1A0gl30';
	}
	
	
	
	public function getCurlToken($authCode){
		
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
		$ch = curl_init();

		curl_setopt($ch, CURLOPT_URL, "https://api.dropbox.com/oauth2/token");
		                             
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
		
		echo "code=$authCode&grant_type=authorization_code&redirect_uri=https://techieservice.org/";
		
		curl_setopt($ch, CURLOPT_POSTFIELDS, "code=$authCode&grant_type=authorization_code&redirect_uri=https://techieservice.org/");
		curl_setopt($ch, CURLOPT_POST, 1);

		$headers = array();
		$headers[] = "Content-Type: application/x-www-form-urlencoded";
		curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

		$result = curl_exec($ch);
		if (curl_errno($ch)) {
			echo 'Error:' . curl_error($ch);
		}
		curl_close($ch);

		var_dump($result);
		
	}
	
	
	
	public function getList($accessToken, $dir){
		$dbxClient = new dbx\Client($accessToken, "PHP-Example/1.0");
		$folderMetadata = $dbxClient->getMetadataWithChildren($dir);
		return $folderMetadata;
	}
	
	
	
	
	
	public function getLink($accessToken, $dropboxPath){
		/*
		$dbxClient = new dbx\Client($accessToken, "PHP-Example/1.0");		
		$pathError = dbx\Path::findError($dropboxPath);
		if ($pathError !== null) {
			echo "Invalid <dropbox-path>: $pathError\n";
		}
		$link = $dbxClient->createTemporaryDirectLink($dropboxPath);
		$link_url = $link[0];
		*/
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
			$ch = curl_init();

			curl_setopt($ch, CURLOPT_URL, "https://api.dropboxapi.com/2/sharing/create_shared_link");
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"path\":\"". $dropboxPath  ."\",\"short_url\":false,\"pending_upload\":{\".tag\":\"file\"}}");
			curl_setopt($ch, CURLOPT_POST, 1);

			$headers = array();
			$headers[] = "Authorization: Bearer ".   $accessToken;
			$headers[] = "Content-Type: application/json";
			curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			$result = curl_exec($ch);
			if (curl_errno($ch)) {
				echo 'Error:' . curl_error($ch);
			}
			curl_close ($ch);
		
		$result = json_decode($result);
		
		$url  = substr($result->url , 0 ,  strlen($result->url) - 1) . '1';
		
		return $url;
	}
	
	//upload the file
	
	public function UploadFile($accessToken, $dropboxPath, $sourcePath){
		$client = new dbx\Client($accessToken, "PHP-Example/1.0");		
		
		$pathError = dbx\Path::findErrorNonRoot($dropboxPath);
		if ($pathError !== null) {
			echo "Invalid <dropbox-path>: $pathError\n";
		}

		$size = null;
		if (\stream_is_local($sourcePath)) {
			$size = \filesize($sourcePath);
		}

		$fp = fopen($sourcePath, "rb");
		$metadata = $client->uploadFile($dropboxPath, dbx\WriteMode::add(), $fp, $size);
		fclose($fp);
		return $metadata['path'];
	}
	
	
	public function CreateDirectory($accessToken,$dropboxPath){
		$client = new dbx\Client($accessToken, "PHP-Example/1.0");	
		$pathError  = dbx\Path::findErrorNonRoot($dropboxPath);
		$sourcePath = "server/php/temp.txt";
		$dropboxPath = $dropboxPath.'/temp.txt';
		
		
		$size = null;
		if (\stream_is_local($sourcePath)) {
			$size = \filesize($sourcePath);
		}

		$fp = fopen($sourcePath, "rb");
		$metadata = $client->uploadFile($dropboxPath, dbx\WriteMode::add(), $fp, $size);
		fclose($fp);
		
		$client->delete($dropboxPath);
	}
	
}
//https://www.dropbox.com/s/tgvgohv72bcimbl/Maid%20with%20the%20Flaxen%20Hair.mp3?dl=0

	
?>


				
						






