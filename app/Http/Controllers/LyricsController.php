<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\Lyrics;
use App\User, DB, Auth, Redirect, Validator,View;
use App\Ads;
use App\Songs;
use App\Services\PricesClass;
use App\Settings;
class LyricsController extends Controller
{
    //
	private function UploadFile($sourcePath, $dropboxPath){ 
		$token = Settings::where('key', '=', 'dropboxTokenKey')->first();
		$accesstoken  = $token->value;
		$abc = new PricesClass();
		$path = $abc->UploadFile($accesstoken, $dropboxPath, $sourcePath);
		unlink($sourcePath);
		$url = $abc->getLink($accesstoken,$path);
		return $url;
	}
	
	private function getsharelink($dropboxPath){
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings");
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"path\": \"". $dropboxPath  ."\",\"settings\": {\"requested_visibility\": \"public\"}}");
			curl_setopt($ch, CURLOPT_POST, 1);

			$headers = array();
			$headers[] = "Authorization: Bearer qt3CnAk9F1AAAAAAAAAAaWYDEsUXfHMTMhSzcDgzqbouMWiz6hlGpLqFB1MvWafF";
			$headers[] = "Content-Type: application/json";
			curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			$response = curl_exec($ch);
			if (curl_errno($ch)) {
				echo 'Error:' . curl_error($ch);
			}
			curl_close ($ch);
			$result =  json_decode($response);
			
			$url  = substr($result->url , 0 ,  strlen($result->url) - 1) . '1';
			return $url;
	}
	
	private function Uploadimagetodropbox($dropboxPath, $sourcePath){
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($ch, CURLOPT_POST, true);

			$token = "qt3CnAk9F1AAAAAAAAAAaWYDEsUXfHMTMhSzcDgzqbouMWiz6hlGpLqFB1MvWafF";
			$host = "https://content.dropboxapi.com/2/files/upload";

			//set headers
			$headers = array('Authorization: Bearer '.$token,
			 'Content-Type: application/octet-stream',
			 'Dropbox-API-Arg: {"path":"'. $dropboxPath  .'","mode":"add"}',
			);
		 
			$f = fopen($sourcePath, "rb");
			
			curl_setopt($ch, CURLOPT_URL, $host);
			curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			// What should the POST data look like? Using the file handle? That doesn't work.
			curl_setopt($ch, CURLOPT_POSTFIELDS, $dropboxPath);
			curl_setopt($ch, CURLOPT_POSTFIELDS, fread($f, filesize($sourcePath)));
			 
			fclose($f);
			$response = curl_exec($ch);
			curl_close($ch);
			
			$result =  json_decode($response);
			return $result->path_display;
	}
	
	
	
	
	public function uploadlyric(Request $request)
	{
		//save the data
		// To use
		$validator = Validator::make($request->all(),
		  [	'title_upload_song_riryc' => 'required',
			'lyrics_content' => 'required',
			'lyrics_artise_name' => 'required',
			'uploadsong_img_riryc'    => 'required|image|mimes:jpeg,bmp,png'
			]
		)->validate();
		
		$uploadsong_img_riryc=$request->uploadsong_img_riryc;
		
		if($uploadsong_img_riryc){
			if(Auth::user()->status == 1){
				$lyrics = new Lyrics;
				$lyrics->title  = $_POST['title_upload_song_riryc'];
				$lyrics->content = $_POST['lyrics_content'];
				$lyrics->artise_name  = $_POST['lyrics_artise_name'];
				$lyrics->artise_id = Auth::user()->id;
				
				$imageName=$uploadsong_img_riryc->hashName();
				$uploadsong_img_riryc->store('images');
				$sourcePath     = storage_path() . "/app/images/" . $imageName;
				$dropboxPath    = '/images/' . $imageName;
				
				$imagepath =  $this->Uploadimagetodropbox($dropboxPath, $sourcePath);
				$lyrics->image  = $this->getsharelink($imagepath);
			 
				if(Auth::user()->approved == 1) $lyrics->status = 1;
				
				// check auto
				$token = Settings::where('key', '=', 'autoapprove')->first();
				if($token->value){
					$auto_enable = Lyrics::where('artise_id', Auth::user()->id)
										->where('status', 1)
										->count();
					if($auto_enable)
						$lyrics->status = 1;
				}
				
				
				$ret = $lyrics->save();
			}
		}
				
		
		return Redirect::back()->with(['msg', 'The Message']);
	}
	
	public function browse(){
		
		if(isset($_GET['sort'])){
			
			$lyrics =DB::table('lyrics')->select('lyrics.*', 'users.name')->leftJoin('users', 'users.id', '=', 'lyrics.artise_id')->whereRaw("title like '".$_GET['sort']."%' or title like '".strtoupper($_GET['sort'])."%'")->orderBy('lyrics.updated_at', 'desc')->get();
		
		}
		else
			$lyrics =DB::table('lyrics')->select('lyrics.*', 'users.name')->leftJoin('users', 'users.id', '=', 'lyrics.artise_id')->whereRaw(" lyrics.status = '1' ")->orderBy('lyrics.updated_at', 'desc')->get();
		
		$ads = Ads::whereRaw('menu = "4" and status = "1"')->get();
		
		return view('lyrics', array('lyrics'=> $lyrics, 'likesongs'=>app('App\Http\Controllers\SongsController')->getfavoritesongs(), 'playlists' => app('App\Http\Controllers\SongsController')->getplaylistsongs(), 'ads' => $ads));
	}
	
	

	public function getLyric($name, $id){
		$comments =DB::table('comments')->select('comments.*', 'users.name', 'users.image')->leftJoin('users', 'users.id', '=', 'comments.user_id')->whereRaw('comments.type = "1" and comments.news_id = "'. $id .'" ')->get();
	
		$lyric =DB::table('lyrics')->select('lyrics.*', 'users.name')->leftJoin('users', 'users.id', '=', 'lyrics.artise_id')->whereRaw(" lyrics.id = '$id' ")->orderBy('lyrics.updated_at', 'desc')->first();
		
		
		return view('lyricdetail', array('lyric' => $lyric, 'comments' => $comments , 'likesongs'=>app('App\Http\Controllers\SongsController')->getfavoritesongs(),  'playlists' => app('App\Http\Controllers\SongsController')->getplaylistsongs()));
	}
	
	public function publishLyric(){
		// update
		$msg = "This is a simple message.";
		
		$user_id = $_POST['user_id'];
		$id = $_POST['id'];
		$act = $_POST['act'];
	
		$lyric = Lyrics::find($id);
		$lyric->status  = $act;

		$ret = $lyric->save();
	
		if($ret) {
			$status = 1;
			$msg = "Setting success";
		}
		else{
			$status = 0; 
			$msg = "Setting failed";
		}
		
	
		
		if($act == '1'){
			$user = User::find($user_id);
			$email  = $user->email;
			
			$link_url = "http://" . $_SERVER['HTTP_HOST']. $lyric->title.'/lyric-detail/'. $lyric->id;
			$message = "Hello ". $user->name."! <br/> link here </a> Your lyrics  has been approved.  Share the link below on your social media pages to help promote it. We also have a premium promotion service where we can promote your songs,lyrics & Youtube videos to 1000s of Facebook, Twitter and Youtubers. 

				<br/>
				<br/>
				Interested ? Send us an email : promo@africaworships.com
		        Link to share : <a href = 'http://africa.triche-osborne.com/lyric-detail/". $lyric->title. "/". $lyric->id ."'>link here </a>
				<br/>
				Thanks<br/>
				Africa Worships Team
			";
			
			
			$subject = "worship @". $user->name;
			$headers  = "From: worship \r\n";
			$headers .= "Reply-To:\r\n";
			$headers .= "MIME-Version: 1.0\r\n";
			$headers .= "Content-Type: text/html; charset=ISO-8859-1\r\n";
			mail($email, $subject, $message, $headers);
		}
		
		
	return response()->json(array('msg'=> $msg, 'status'=> $status), 200);
		
	}
	
}
