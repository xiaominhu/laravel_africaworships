<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use App\News;
use App\Comment;
use App\User;
use Input, DB, Auth, Redirect, Validator, View;
use App\Ads;
use App\Settings;
use App\Services\PricesClass;
class NewsController extends Controller
{
    //
	function browse_admin(){
		if (Auth::check()){
			$user_id = Auth::user()->id;
		}
		else{
			return redirect()->action('HomeController@browse_admin_home')->with('message', 'Suceess!');
		}
		$permission_array  = app('App\Http\Controllers\HomeController')->getPermssion();
		$news = News::orderBy('created_at', 'DESC')->paginate(10);
		return view('adminnews', compact('news', 'permission_array'));
	}
		private function getsharelink($dropboxPath){
		// Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_URL, "https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings");
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
			curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"path\": \"". $dropboxPath  ."\",\"settings\": {\"requested_visibility\": \"public\"}}");
			curl_setopt($ch, CURLOPT_POST, 1);

			$headers = array();
			$headers[] = "Authorization: Bearer qt3CnAk9F1AAAAAAAAAAaWYDEsUXfHMTMhSzcDgzqbouMWiz6hlGpLqFB1MvWafF";
			$headers[] = "Content-Type: application/json";
			curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			$response = curl_exec($ch);
			if (curl_errno($ch)) {
				echo 'Error:' . curl_error($ch);
			}
			curl_close ($ch);
			$result =  json_decode($response);
			
			$url  = substr($result->url , 0 ,  strlen($result->url) - 1) . '1';
			return $url;
	}
	
	private function Uploadimagetodropbox($dropboxPath, $sourcePath){
			$ch = curl_init();
			curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($ch, CURLOPT_POST, true);

			$token = "qt3CnAk9F1AAAAAAAAAAaWYDEsUXfHMTMhSzcDgzqbouMWiz6hlGpLqFB1MvWafF";
			$host = "https://content.dropboxapi.com/2/files/upload";

			//set headers
			$headers = array('Authorization: Bearer '.$token,
			 'Content-Type: application/octet-stream',
			 'Dropbox-API-Arg: {"path":"'. $dropboxPath  .'","mode":"add"}',
			);
		 
			$f = fopen($sourcePath, "rb");
			
			curl_setopt($ch, CURLOPT_URL, $host);
			curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

			// What should the POST data look like? Using the file handle? That doesn't work.
			curl_setopt($ch, CURLOPT_POSTFIELDS, $dropboxPath);
			curl_setopt($ch, CURLOPT_POSTFIELDS, fread($f, filesize($sourcePath)));
			 
			fclose($f);
			$response = curl_exec($ch);
			curl_close($ch);
			
			$result =  json_decode($response);
			return $result->path_display;
	}
	
	
	
	public function uploadnews(Request $request){
		//save the data 
		if (Auth::check()){
			$user_id = Auth::user()->id;
		}
		else{
			return redirect()->action('HomeController@browse_admin_home')->with('message', 'Suceess!');
		}
		
		$validator = Validator::make($request->all(),
		  [	'title_upload_news' => 'required',
			'summernote_code' => 'required',
			'uploadnews_img'    => 'required|image|mimes:jpeg,bmp,png'
			]
		)->validate();
		
		$uploadnews_img = $request->uploadnews_img;
		
		if($uploadnews_img){
			if(Auth::user()->status == 1){
				
				if(isset($_GET['id'])){
					$id = $_GET['id'];
					$news = News::find($id);
				}
				else
					$news = new News;
				
				$news->title  = $_POST['title_upload_news'];
				$news->code = str_replace("'","\'",$_POST['summernote_code']);
				$news->user_id = $user_id;
				
				$imageName=$uploadnews_img->hashName();
				$uploadnews_img->store('images');
				$sourcePath     = storage_path() . "/app/images/" . $imageName;
				$dropboxPath    = '/images/' . $imageName;
				
		 
				$imagepath =  $this->Uploadimagetodropbox($dropboxPath, $sourcePath);
				 
				$news->image = $this->getsharelink($imagepath);
			
			
			
				
				if(Auth::user()->approved == 1) $news->status = 1;
				
				$token = Settings::where('key', '=', 'autoapprove')->first();
				if($token->value){
					$auto_enable = News::where('artise_id', Auth::user()->id)
										->where('status', 1)
										->count();
					if($auto_enable)
						$news->status = 1;
				}
				
		
		
				$ret = $news->save();
			}
		}
		
		
		
		
		return redirect()->action('NewsController@browse_admin')->with('message', 'Suceess!');
	}
	
	public function adminnewsdetail(){
		if (Auth::check()){
			$user_id = Auth::user()->id;
		}
		else{
			return redirect()->action('HomeController@browse_admin_home')->with('message', 'Suceess!');
		}
		
		$permission_array  = app('App\Http\Controllers\HomeController')->getPermssion();
		if(isset($_GET['id'])){
			$id = $_GET['id'];
			$news = News::find($id);
			return view('adminnewsdetail', compact('news', 'permission_array'));
		}
		else
			return view('adminnewsdetail',compact('permission_array'));
	}
	
	public function publishNews(){
		$user_id = Auth::user()->id;
		// update
		$msg = "This is a simple message.";
		$id = $_POST['id'];
		$act = $_POST['act'];
		
		$news = News::find($id);
		$news->status  = $act;
		$ret = $news->save();
		if($ret) {
			$status = 1;
			$msg = "Setting success";
			
			if($act == '1'){
				$user = User::find($user_id);
				$email  = $user->email;
				
				$message = "Hello ". $user->name."! <br/> Your  news has been approved.   Share the link below on your social media pages to help promote it. We also have a premium promotion service where we can promote your songs,lyrics & Youtube videos to 1000s of Facebook, Twitter and Youtubers.
					<br/>
					<br/>
					Interested ? Send us an email : promo@africaworships.com
					Link to share : <a href = 'http://africaworships.com/full-post/". $news->title. "/". $news->id ."'>link here </a>
					<br/>
					Thanks<br/>
					Africa Worships Team
				";
				$subject = "worship @". $user->name;
				$headers  = "From: worship \r\n";
				$headers .= "Reply-To:\r\n";
				
				$headers .= "MIME-Version: 1.0\r\n";
				$headers .= "Content-Type: text/html; charset=ISO-8859-1\r\n";
				mail($email, $subject, $message, $headers);
			}
		}
		else{
			$status = 0; 
			$msg = "Setting failed";
		}	
		return response()->json(array('msg'=> $msg, 'status'=> $status), 200);
	}
	
	public function browse(){
		
		if(isset($_GET['sort'])){
			$sort = $_GET['sort'];
			switch($sort){
				case 'year': 
					$news = News::whereRaw("created_at >= DATE_SUB(NOW(),INTERVAL 1 YEAR) and status = '1'")->orderBy("updated_at", 'DESC')->orderBy("viewed", 'DESC')->get();					
					break;
				case 'month': 
					$news = News::whereRaw("created_at >= DATE_SUB(NOW(),INTERVAL 1 MONTH) and status = '1'")->orderBy("updated_at", 'DESC')->orderBy("viewed", 'DESC')->get();	
					break;
				case 'week': 
					$news = News::whereRaw("created_at >= DATE_SUB(NOW(),INTERVAL 1 WEEK) and status = '1'")->orderBy("updated_at", 'DESC')->orderBy("viewed", 'DESC')->get();
					break;
			}
		}
		else
			$news = News::whereRaw("status = '1'")->orderBy("updated_at", 'DESC')->get();
		$ads = Ads::whereRaw('menu = "5" and status = "1"')->get();
		
		return view('news', array('news' => $news, 'likesongs'=>app('App\Http\Controllers\SongsController')->getfavoritesongs(),  'playlists' => app('App\Http\Controllers\SongsController')->getplaylistsongs(), 'ads' => $ads));
	}
	
	public function newsdetail($name, $id){
		
		$news = News::find($id);		
		//save
		$viewed = $news->viewed;
		$viewed += 1;
		$news->viewed = $viewed;
		$news->save();		
		//get the comment
		$comments =DB::table('comments')->select('comments.*', 'users.name','users.image')->leftJoin('users', 'users.id', '=', 'comments.user_id')->whereRaw('comments.type = "0" and comments.news_id = "'. $id .'" ')->get();
		
	
		return view('newsdetail', array('news' => $news, 'comments' => $comments,'likesongs'=>app('App\Http\Controllers\SongsController')->getfavoritesongs(),  'playlists' => app('App\Http\Controllers\SongsController')->getplaylistsongs()));
	}
	
	public function uploadnewsFront(Request $request){
		$validator = Validator::make($request->all(),
		  [	'title_upload_news' => 'required',
			'summernote_code' => 'required',
			'uploadnews_img_front'    => 'required|image|mimes:jpeg,bmp,png'
			]
		)->validate();
		
		$uploadnews_img_front=$request->uploadnews_img_front;
		
		if($uploadnews_img_front){
			if(Auth::user()->status == 1){
				$user_id = Auth::user()->id;
				$news = new News;
				$news->title  = $_POST['title_upload_news'];
				$news->code = str_replace("'","\'",$_POST['summernote_code']);
				$news->user_id = $user_id;
				
				$imageName=$uploadnews_img_front->hashName();
				$uploadnews_img_front->store('images');
				$sourcePath     = storage_path() . "/app/images/" . $imageName;
				$dropboxPath    = '/images/' . $imageName;
				
				$imagepath =  $this->Uploadimagetodropbox($dropboxPath, $sourcePath);
				 
				$news->image = $this->getsharelink($imagepath);
			
			
			 	
				
				if(Auth::user()->approved == 1) $news->status = 1;
				$ret = $news->save();
				
			}
		}
		return Redirect::back()->with(['msg', 'The Message']);
	}
	
	//deletenewsitem
	private function UploadFile($sourcePath, $dropboxPath){ 
		$token = Settings::where('key', '=', 'dropboxTokenKey')->first();
		$accesstoken  = $token->value;
		$abc = new PricesClass();
		$path = $abc->UploadFile($accesstoken, $dropboxPath, $sourcePath);
		unlink($sourcePath);
		$url = $abc->getLink($accesstoken,$path);
		return $url;
	}
	
	
	public function deletenews($id){
		$news = News::find($id);
		if(count($news))
			$news->delete();
		return redirect()->action('NewsController@browse_admin')->with('message', 'Suceess!');
	}
	
}
